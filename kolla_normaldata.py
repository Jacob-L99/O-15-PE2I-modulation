import os

def check_normaldata(wat_tracer, normal_data):
    def check_files(directory, filenames):
        """
        Check if files in the filenames list exist in the specified directory.
    
        Parameters:
        - directory (str): The path to the directory to check.
        - filenames (list): A list of filenames to check for existence.
    
        Returns:
        - bool: True if all files exist, False otherwise.
        - list: A list of missing filenames.
        """
        missing_files = []
        for filename in filenames:
            file_path = os.path.join(directory, filename)
            if not os.path.isfile(file_path):
                missing_files.append(filename)
        if missing_files:
            return False, missing_files
        else:
            return True, []
    
    # List of filenames to check
    if wat_tracer=='wat':
        filenames = [
            'flow_region_mean_std_k1.txt',
            '48_region_mean_std_k1.txt',
            'mean_and_std_first_values_yz_neg_x0_k1.npy',
            'mean_and_std_first_values_yz_pos_x1_k1.npy',
            'mean_and_std_first_values_yz_pos_x2_k1.npy',
            'mean_and_std_first_values_yz_neg_x2_k1.npy',
            'mean_and_std_first_values_xz_pos_y2_k1.npy',
            'mean_and_std_first_values_xz_neg_y2_k1.npy',
        ]
    
    elif wat_tracer=='wat_1_2':
        filenames = [
            # Files generated by wat1_wat2_mean_std
            'flow_region_mean_std_k1_1.txt',
            '48_region_mean_std_k1_1.txt',
            'mean_and_std_first_values_yz_neg_x0_k1_1.npy',
            'mean_and_std_first_values_yz_pos_x1_k1_1.npy',
            'mean_and_std_first_values_yz_pos_x2_k1_1.npy',
            'mean_and_std_first_values_yz_neg_x2_k1_1.npy',
            'mean_and_std_first_values_xz_pos_y2_k1_1.npy',
            'mean_and_std_first_values_xz_neg_y2_k1_1.npy',
            'flow_region_mean_std_k1_1_ref.txt',
            '48_region_mean_std_k1_1_ref.txt',
            'mean_and_std_first_values_yz_neg_x0_k1_1_ref.npy',
            'mean_and_std_first_values_yz_pos_x1_k1_1_ref.npy',
            'mean_and_std_first_values_yz_pos_x2_k1_1_ref.npy',
            'mean_and_std_first_values_yz_neg_x2_k1_1_ref.npy',
            'mean_and_std_first_values_xz_pos_y2_k1_1_ref.npy',
            'mean_and_std_first_values_xz_neg_y2_k1_1_ref.npy',
            'flow_region_mean_std_k1_2.txt',
            '48_region_mean_std_k1_2.txt',
            'mean_and_std_first_values_yz_neg_x0_k1_2.npy',
            'mean_and_std_first_values_yz_pos_x1_k1_2.npy',
            'mean_and_std_first_values_yz_pos_x2_k1_2.npy',
            'mean_and_std_first_values_yz_neg_x2_k1_2.npy',
            'mean_and_std_first_values_xz_pos_y2_k1_2.npy',
            'mean_and_std_first_values_xz_neg_y2_k1_2.npy',
            'flow_region_mean_std_k1_2_ref.txt',
            '48_region_mean_std_k1_2_ref.txt',
            'mean_and_std_first_values_yz_neg_x0_k1_2_ref.npy',
            'mean_and_std_first_values_yz_pos_x1_k1_2_ref.npy',
            'mean_and_std_first_values_yz_pos_x2_k1_2_ref.npy',
            'mean_and_std_first_values_yz_neg_x2_k1_2_ref.npy',
            'mean_and_std_first_values_xz_pos_y2_k1_2_ref.npy',
            'mean_and_std_first_values_xz_neg_y2_k1_2_ref.npy',
            'flow_region_mean_std_k1_3.txt',
            '48_region_mean_std_k1_3.txt',
            'mean_and_std_first_values_yz_neg_x0_k1_3.npy',
            'mean_and_std_first_values_yz_pos_x1_k1_3.npy',
            'mean_and_std_first_values_yz_pos_x2_k1_3.npy',
            'mean_and_std_first_values_yz_neg_x2_k1_3.npy',
            'mean_and_std_first_values_xz_pos_y2_k1_3.npy',
            'mean_and_std_first_values_xz_neg_y2_k1_3.npy',
            'flow_region_mean_std_k1_3_ref.txt',
            '48_region_mean_std_k1_3_ref.txt',
            'mean_and_std_first_values_yz_neg_x0_k1_3_ref.npy',
            'mean_and_std_first_values_yz_pos_x1_k1_3_ref.npy',
            'mean_and_std_first_values_yz_pos_x2_k1_3_ref.npy',
            'mean_and_std_first_values_yz_neg_x2_k1_3_ref.npy',
            'mean_and_std_first_values_xz_pos_y2_k1_3_ref.npy',
            'mean_and_std_first_values_xz_neg_y2_k1_3_ref.npy',
        ]
    elif wat_tracer=='F-18':
        filenames = [
            'flow_region_mean_std_R_I.txt',
            '48_region_mean_std_R_I.txt',
        ]
    
    elif wat_tracer=='C-11':
        filenames = [
            'flow_region_mean_std_R_I_C.txt',
            '48_region_mean_std_R_I_C.txt',
            # Add any other filenames generated by R_I_C_mean_std
        ]

    
    # Check if all files exist and get the list of missing files
    all_exist, missing_files = check_files(normal_data, filenames)
    
    if all_exist:
        print("All files exist in the directory.")
        print(all_exist)
    else:
        print("Not all files exist in the directory.")
        print("Missing files:")
        for file in missing_files:
            print(f"- {file}")
    return all_exist


